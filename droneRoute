// Example Input:
// startingPoint => { lat, lon }
// destPoint => { lat, lon }
// stations => { id: {lat, lon }, ...}
//

class DroneController {
  constructor (stations, source, destination, options) {
    this.stations = stations
    this.source = source
    this.destination = destination
    this.options = options
    
    // Add Source and Destination Points to the List of Stations
    this.stations.source = this.source
    this.stations.destination = this.destination
  }
  
  distance (a, b) {
    function deg2rad(deg) {
  		return deg * (Math.PI/180)
		}
    const R = 6371								// Radius of the earth in km
    
    let dLat = deg2rad(a.lat - b.lat)
    let dLon = deg2rad(a.lon - b.lon)
    let A =  Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(deg2rad(a.lat)) * Math.cos(deg2rad(b.lat)) * Math.sin(dLon/2) * Math.sin(dLon/2) 
  	let C = 2 * Math.atan2(Math.sqrt(A), Math.sqrt(1-A)) 
  	let D = R * C 								// Distance in km
  	return D
    
  }
  
  constructGraph () {
    this.graph = {}
    for (let point in stations) {
      for (let adj in stations) {
        if (point === adj) {
          continue
        }
        if (distance(point, adj) <= this.options.MAX_DISTANCE ) {
          graph[point] = graph[point] || {}
          graph[point][adj] = distance(point, adj)
        }
      }
    }
  }
  
}